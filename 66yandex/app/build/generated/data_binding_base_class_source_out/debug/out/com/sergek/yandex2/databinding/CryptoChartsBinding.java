// Generated by view binder compiler. Do not edit!
package com.sergek.yandex2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.github.mikephil.charting.charts.LineChart;
import com.sergek.yandex2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CryptoChartsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final HorizontalScrollView horizontalScrollView;

  @NonNull
  public final LineChart lineCryptoChart;

  @NonNull
  public final TextView noCandles;

  private CryptoChartsBinding(@NonNull ConstraintLayout rootView,
      @NonNull HorizontalScrollView horizontalScrollView, @NonNull LineChart lineCryptoChart,
      @NonNull TextView noCandles) {
    this.rootView = rootView;
    this.horizontalScrollView = horizontalScrollView;
    this.lineCryptoChart = lineCryptoChart;
    this.noCandles = noCandles;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CryptoChartsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CryptoChartsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.crypto_charts, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CryptoChartsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.horizontalScrollView;
      HorizontalScrollView horizontalScrollView = rootView.findViewById(id);
      if (horizontalScrollView == null) {
        break missingId;
      }

      id = R.id.line_crypto_chart;
      LineChart lineCryptoChart = rootView.findViewById(id);
      if (lineCryptoChart == null) {
        break missingId;
      }

      id = R.id.no_candles;
      TextView noCandles = rootView.findViewById(id);
      if (noCandles == null) {
        break missingId;
      }

      return new CryptoChartsBinding((ConstraintLayout) rootView, horizontalScrollView,
          lineCryptoChart, noCandles);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
